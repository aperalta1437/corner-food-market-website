-- CUSTOMER ---------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION set_CREATED_AT_for_CUSTOMER() RETURNS TRIGGER AS $$
BEGIN
    UPDATE  CUSTOMER
    SET     CREATED_AT = now()
    WHERE   ID = NEW.ID;

    RETURN NEW;
END; $$
LANGUAGE plpgsql;

CREATE TRIGGER set_CREATED_AT_on_after_INSERT
AFTER INSERT ON CUSTOMER
FOR EACH ROW
EXECUTE PROCEDURE set_CREATED_AT_for_CUSTOMER();

-- CUSTOMER_ADDRESS ------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION set_CREATED_AT_for_CUSTOMER_ADDRESS() RETURNS TRIGGER AS $$
BEGIN
    UPDATE  CUSTOMER_ADDRESS
    SET     CREATED_AT = now()
    WHERE   ID = NEW.ID;

    RETURN NEW;
END; $$
LANGUAGE plpgsql;

CREATE TRIGGER set_CREATED_AT_on_after_INSERT
AFTER INSERT ON CUSTOMER_ADDRESS
FOR EACH ROW
EXECUTE PROCEDURE set_CREATED_AT_for_CUSTOMER_ADDRESS();

-- ITEM_CATEGORY_HIERARCHY --------------------------------------------------------------------

CREATE OR REPLACE FUNCTION set_CREATED_AT_for_ITEM_CATEGORY() RETURNS TRIGGER AS $$
BEGIN
    UPDATE  ITEM_CATEGORY
    SET     CREATED_AT = now()
    WHERE   ID = NEW.ID;

    RETURN NEW;
END; $$
LANGUAGE plpgsql;

CREATE TRIGGER set_CREATED_AT_on_after_INSERT
AFTER INSERT ON ITEM_CATEGORY
FOR EACH ROW
EXECUTE PROCEDURE set_CREATED_AT_for_ITEM_CATEGORY();

